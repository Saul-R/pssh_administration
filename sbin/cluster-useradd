#!/bin/bash

DIR="$(dirname "$(readlink -f "$0")")"
source $DIR/../conf/cluster-admin-env.sh

if [ "$#" != "1" ];then
	echo "Usage: $0 <username>"
	exit 1
fi
echo "Password:"
read -s password
echo "Repeat the password:"
read -s password2

if [ "$password" != "$password2" ];then
	echo "Passwords don't match."
	exit 1
fi

pssh -h $DIR/../conf/all-hosts "sudo useradd -s /bin/bash $1 && echo '$1:$password'|sudo chpasswd && sudo mkdir -p /home/$1/.ssh && sudo chown -R  $1:$1 /home/$1"
echo "Creating HDFS home directory for the user..."
sudo su -l hdfs -c "hdfs dfs -mkdir /user/$1"
sudo su -l hdfs -c "hdfs dfs -chown $1:$1 /user/$1"
echo "Configuring passwordless SSH access to the cluster nodes..."
sudo su -l $1 -c 'ssh-keygen -t rsa -P "" -f ~/.ssh/id_rsa' &>/dev/null
sudo cat /home/$1/.ssh/id_rsa.pub|pssh -I -h $DIR/../conf/all-hosts "sudo tee /home/$1/.ssh/authorized_keys"
pssh -h $DIR/../conf/all-hosts "sudo chown $1:$1 /home/$1/.ssh/authorized_keys" &>/dev/null

echo "Creating MongoDB user..."
mongo -u $ADMIN_USER -p $ADMIN_PASS --eval 'db.createUser({user: "'$1'", pwd: "'$password'", roles: [ { role: "readWrite", db: "test" } ]})' $MONGO_ENDPOINT/auth

echo "Creating Cassandra User..."
cqlsh -u $ADMIN_USER -p $ADMIN_PASS -e "CREATE USER $1 WITH PASSWORD '$password'" $CASSANDRA_ENDPOINT

echo "Creating Neo4J User..."
ssh $NEO4J_HOST "sudo neo4j-adduser ""$1"":""$password"" && sudo service neo4j restart"
